//
// Copyright (c) 2019 DENSO CORPORATION.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

Package Constraints {
	Constraint Hidden_area_for_PCS_interrupts {
		description: "Hide other areas when there is a PCS interrupt message."
		runtime: true
		PCS.isVisible() -> For-All OtherArea { x | x.isHidden() }
	}
	
	Constraint Duplicate_display_of_outside_temperatures {
		description: "If the meter shows the outside temperature, it will not show up on the HUD."
		runtime: true
		OutsideTemperatureArea.isDisplayed() -> HUD_OutsideTemperatureArea.isHidden()
	}
	
	Constraint Hidden_HUD_when_HUD_is_power_off {
		description: "Will not display anything on HUD when HUD is off."
		runtime: true
		HUDoffScene.isOn() -> For-All AllHUDArea { x | x.isHidden() }
	}
	
	Constraint PCS_is_not_displayed_while_TEL_is_displayed {
		description: "PCS is not displayed while TEL is displayed."
		runtime: true
		(pre)TEL.isVisible() -> !PCS.isVisible()
	}


	Constraint Navigation_voice_ringtone_priority_constraint {
		description: "If the navigation / ringtone is playing, the music playback will be attenuated."
		runtime: true
		GuideVoice.isSounding() OR Ringtone.isSounding()-> BaseSoundZone.isAttenuated()
	}

	Constraint Warning_sound_top_priority_constraint {
		description: "If a AlertSound is playing, music playback must be muted"
		runtime: true
		AlertSound.isSounding()-> BaseSoundZone.isMuted()
	}

	Constraint View_and_sound_synchronization_constraints {
		description: "Play music if audio is displayed"
		runtime: true
		Audio.isVisible() -> Music.isSounding()
	}

	PostConstraint Post_processing_constraints_that_make_infrastructure_coordination_stand_by {
		description: "Infrastructure coordination waits if TEL loses mediation"
		InfraCoordination.isDefeatedBy(TEL) -> !InfraCoordination.isCanceled()
	}

	Constraint Offline_constraints_to_detect_unintended_behavior {
		description: "Check if the previously hidden content can be displayed this time"
		runtime: false
		For-All ALL_VIEWCONTENTS { x |
			((!(pre)x.isVisible() AND x.isVisible())
				-> (!(pre)x.isActive() OR
					Exists x.allocatables() { a | ((a.displayingContent() == x) AND (
						((pre)a.isDisplayed() AND !(pre)a.displayingContent().isActive()) OR (pre)a.isHidden()
					))}
				)
			)
		}
	}
}
